"use client";

import { TITLE_TAILWIND_CLASS } from '@/utils/constants';
import Image from 'next/image';
import Link from 'next/link';
import { useEffect, useState } from 'react';
import { supabaseClient } from '@/lib/supabaseClient'; // Import Supabase client

export default function BlogSample() {
  const [quizzes, setQuizzes] = useState<any[]>([]);
  const [loading, setLoading] = useState(true);

  // Fetch recently generated quizzes from Supabase
  useEffect(() => {
    async function fetchQuizzes() {
      try {
        const { data, error } = await supabaseClient
          .from('Quiz')
          .select(`
            id,
            createdAt,
            Resource (
              id,
              url,
              type,
              title,
              content,
              image_url
            )
          `)
          .order('createdAt', { ascending: false }) // Sort by most recent
          .limit(10); // Fetch the 3 most recent quizzes

        if (error) {
          throw new Error(error.message);
        }

        setQuizzes(data || []);
      } catch (error) {
        console.error('Error fetching quizzes:', error);
      } finally {
        setLoading(false);
      }
    }

    fetchQuizzes();
  }, []);

  if (loading) {
    return <div>Loading quizzes...</div>;
  }

  return (
    <div className="flex flex-col justify-center items-center">
      <div className="flex flex-col items-center p-3 w-full">
        <div className="flex flex-col justify-start items-center gap-2 w-full">
          <div className="flex gap-3 justify-start items-center w-full">
            <h1 className={`${TITLE_TAILWIND_CLASS} mt-2 font-semibold tracking-tight dark:text-white text-gray-900`}>
              Recently Generated Quizzes
            </h1>
          </div>
          <div className="flex gap-3 justify-start items-center w-full border-b pb-4">
            <p className="text-gray-600 dark:text-gray-400">
              Try out these quizzes generated by our AI
            </p>
          </div>
        </div>
      </div>
      <div className="flex flex-col items-start">
        <div className="grid gap-5 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 mt-5">
          {quizzes.map((quiz) => (
            <Link href={`/dashboard/quiz/${quiz.id}`} key={quiz.id}>
              <article className="flex flex-col space-y-2 p-4 rounded-md border dark:bg-black w-full h-full"> {/* Ensure full height */}
                <div className="relative w-full h-48"> {/* Fixed height for images */}
                  <Image
                    src={quiz.Resource.image_url // Use the provided image_url if available
                      ? quiz.Resource.image_url 
                      : quiz.Resource.type === 'youtube' 
                        ? '/images/youtube-icon.svg' // Fallback for YouTube quizzes
                        : '/images/default-placeholder.svg' // General fallback for all other quizzes
                        } // Use image_url or fallback to icons
                    alt={quiz.Resource.title || (quiz.Resource.type === 'youtube' ? 'YouTube Video Quiz' : 'Article Quiz')}
                    fill // Fill the container
                    className="rounded-md border bg-muted transition-colors object-cover" // Ensure the image covers the area
                  />
                </div>
                <div className="flex flex-col justify-between h-24"> {/* Fixed height for title and date */}
                  <h2 className="text-md lg:text-lg font-bold line-clamp-2"> {/* Limit title to 2 lines */}
                    {quiz.Resource.title || (quiz.Resource.type === 'youtube' ? 'YouTube Video Quiz' : 'Article Quiz')}
                  </h2>
                  <p className="text-sm text-muted-foreground">
                    {new Date(quiz.createdAt).toLocaleDateString()}
                  </p>
                </div>
              </article>
            </Link>
          ))}
        </div>
      </div>
    </div>
  );
}